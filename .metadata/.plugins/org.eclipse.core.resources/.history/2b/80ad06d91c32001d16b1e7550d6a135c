/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "USART_LIB.h"
#include "defines_pines.h"

#include <stdio.h>
#include <string.h>
#include <stdarg.h>

uint8_t txbuffer[50];
uint8_t rxbuffer[50];

uint16_t i=0;

void USART2_GPIO_Init(void);

int main(void)
{
    USART2_GPIO_Init();
    USART_Init(USART2, 16E+6, 115200, 0);

    //habilitar interrupcion
    //parte local del periferico
    USART2->CR1 |= USART_CR1_TXEIE | USART_CR1_RXNEIE; //habilitar interrupcion por transmision y recepcion

    //Parte NVIC (arquitectura ARM)
    NVIC_EnableIRQ(USART2_IRQn); //habilitar interrupciones de usart2

    sprintf((char*)txbuffer,"hola mundo IT");

    USART2 -> CR1 |= USART_CR1_TXEIE;
	/* Loop forever */
	for(;;);
}

void USART2_GPIO_Init(void){

}


/***************ISR****************************/

void USART2_IRQHandler(void){
	if(USART2->SR & USART_SR_TXE){
		if(i<10){
			USART2->DR = txbuffer[i];
			i++;
		}else{
			i=0;
			USART2->CR1 &= ~ USART_CR1_TXEIE; //desactiva las interrupcion de tx Usart2
		}
	}else if(USART2->SR & USART_SR_RXNE){

	}
}

