/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stm32f4xx.h>
#include "delay_timer.h"
/*
 * Generar bases de tiempos con TIMERS, el stm32f401 no cuenta con timers basicos
 */
void GPIO_Init(void);

int main(void)
{
    /* Loop forever */
	GPIO_Init();
	Timer4_Init(16E+6);

	for(;;){
		GPIOX_ODR(LED)=0;
		Timer4_delayms(100); //100ms
		GPIOX_ODR(LED)=1;
		Timer4_delayms(100); //100ms
	}
}

void GPIO_Init(void){
	RCC->AHB1ENR |= GPIOX_CLOCK(LED); //habilitando reloj para pin PA5 (led)
	GPIOX_MODER(MODE_OUT,LED); //PA5 salida
}

/****ISR***********************************/
void TIM4_IRQHandler(void){
	volatile uint32_t uwTick_tim;
	if(TIM4->SR & TIM_SR_UIF){ //la bandera timer4 se ha activado?
		TIM4-> SR &= ~TIM_SR_UIF; //borrar bandera de interrupcion

		/*codigo de usuario*/
		uwTick_tim += 1;
	}
	return;
}
