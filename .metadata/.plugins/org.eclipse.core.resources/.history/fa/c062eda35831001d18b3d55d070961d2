/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stm32f4xx.h>
#include "defines_pines.h"

/*brief
 *
 */
void GPIO_Init(void);
void EXTI_13_Init(void);

int main(void)
{
    /* Loop forever */
	for(;;);
}

void GPIO_Init(void){
	RCC->AHB1ENR |= GPIOX_CLOCK(BUTTON) | GPIOX_CLOCK(LED); //habilitando reloj para el pin A5 (pulsador) y pin C13 (led)

	GPIOX_MODER(MODE_DIGITAL_INPUT,BUTTON); //PC13 entrada
	GPIOX_MODER(MODE_OUT,LED); //PA5 salida
}

void EXTI_13_Init(void){
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;   //habilitar el reloj del sistem configuration

	//1- habilitar el bit de enmascaramiento
	EXTI->IMR |= EXTI_IMR_IM13;

	//2- Seleccionar el borde de disparo de la IT
	EXTI->FTSR |= EXTI_FTSR_TR13;

	//3- Asignar el pin a la linea EXTI1
	SYSCFG->EXTICR[3] &= ~SYSCFG_EXTICR4_EXTI13; //clear
	SYSCFG->EXTICR[3] |= SYSCFG_EXTICR4_EXTI13; //PC13


//CONFIGURACION GLOBAL O CONFIGURACION EN LA NVIC

	//PRIORIDAD
	NVIC_SetPriority(EXTI15_10_IRQn,3); //PRIORIDAD 3

	//HABILITAR LA IT
	NVIC_EnableIRQ(EXTI15_10_IRQn);

	return;
}

void EXIT_IRQHandling(uint32_t pin_number){

	//CLEAR
	EXTI->PR |= 1U<<pin_number;
	EXTI_ApplicationCallback(pin_number);
}

__WEAK void EXTI_ApplicationCallback(uint32_t pinnumber){

}

void EXTI15_10_IRQHandler(void){ //ISR  EXTI 10-11-12-13-14-15
	 if(EXTI->PR & EXTI_PR_PR13){
		 //CLEAR FLAG
		 EXTI->PR |= EXTI_PR_PR13;

		 GPIOX_ODR(LED) ^= 1;
	 }

}




